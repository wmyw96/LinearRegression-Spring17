colnames(results) = c('pi', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 100
for (para in seq(1, 51)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
z = rbinom(n, 1, (para - 1.0) / 100)
x1 = rnorm(n, 0, 1)
x2 = rnorm(n, 5, 1)
x = x1
x[z == 1] = x2[1:sum(z)]
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:51,], id="pi", value.name='power')
g = ggplot(data=results.trans, aes(x=pi, y=power, colour=variable))
g = g + geom_line()
g
# mixture
T = 10000
set.seed(123469)
vec = rep(0, 51)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('pi', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 1000
for (para in seq(1, 51)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
z = rbinom(n, 1, (para - 1.0) / 100)
x1 = rnorm(n, 0, 1)
x2 = rnorm(n, 5, 1)
x = x1
x[z == 1] = x2[1:sum(z)]
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:51,], id="pi", value.name='power')
g = ggplot(data=results.trans, aes(x=pi, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 10000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 100)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + para * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
# noise
T = 10000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 100 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:100,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 100
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 100 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:100,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 100
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 10 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:100,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
T = 100
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 10 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 10
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:100,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 1000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 10 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 10
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:100,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 1000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 100
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 10 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 10
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:100,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 1000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 1000
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 10 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 10
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:100,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 1000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 1000
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 100 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:101,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 1000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 100
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 100 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:101,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# noise
T = 1000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 100 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:101,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
T = 10000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 100 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:101,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
# library
library('nortest')
library('ggplot2')
library('reshape2')
# set significance level
alpha = 0.05
# calculate type 1 error
T = 100000
T = 10000
set.seed(123469)
vec = rep(0, 100)
results = data.frame(vec, vec, vec, vec, vec, vec)
colnames(results) = c('epsilon', 'ad', 'cvm', 'lillie', 'pearson', 'sf')
n = 30
for (para in seq(1, 101)){
print(para)
ad.reject = 0
cvm.reject = 0
lillie.reject = 0
pearson.reject = 0
sf.reject = 0
for (i in seq(1, T)){
x = rnorm(n, 0, 1)
x = x + (para - 1) / 100 * sin(x)
ad.reject = ad.reject + (ad.test(x)$p.value < alpha)
cvm.reject = cvm.reject + (cvm.test(x)$p.value < alpha)
lillie.reject = lillie.reject + (lillie.test(x)$p.value < alpha)
pearson.reject = pearson.reject + (pearson.test(x)$p.value < alpha)
sf.reject = sf.reject + (sf.test(x)$p.value < alpha)
}
results[para, 1] = (para - 1) / 100
results[para, 2] = (ad.reject + 0.0) / T
results[para, 3] = (cvm.reject + 0.0) / T
results[para, 4] = (lillie.reject + 0.0) / T
results[para, 5] = (pearson.reject + 0.0) / T
results[para, 6] = (sf.reject + 0.0) / T
}
results.trans = melt(results[1:101,], id="epsilon", value.name='power')
g = ggplot(data=results.trans, aes(x=epsilon, y=power, colour=variable))
g = g + geom_line()
g
